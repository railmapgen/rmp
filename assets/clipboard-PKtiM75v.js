import{b as g}from"./react-BsdiJPLR.js";import{n as O,aJ as j}from"./index-62JQVL9H.js";const I=typeof window<"u"?g.useInsertionEffect||g.useLayoutEffect:()=>{};function x(s){const r=g.useRef(S);I(()=>{r.current=s},[s]);const o=g.useRef(null);return o.current||(o.current=function(){return r.current.apply(this,arguments)}),o.current}function S(){throw new Error("INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.")}const k=(s,r)=>{const o={},u={};let[l,E]=[0,0],d=0;r.forEach(c=>{if(s.hasNode(c)){const n=c,i=s.getNodeAttributes(n);o[n]=i,l+=i.x,E+=i.y,d++}else if(s.hasEdge(c)){const n=c,[i,h]=s.extremities(n);u[n]={attr:s.getEdgeAttributes(n),source:i,target:h}}});const b={app:"rmp",version:1,nodesWithAttrs:o,edgesWithAttrs:u,avgX:l/d,avgY:E/d};return JSON.stringify(b)},R=(s,r,o,u,l,E)=>{const{nodesWithAttrs:d,edgesWithAttrs:b,version:c}=JSON.parse(s);if(c!==1)throw Error("Unrecognized version: ".concat(c));const n={};Object.keys(d).filter(e=>r.hasNode(e)).forEach(e=>{const t=O(10);if(e.startsWith("stn_"))n[e]="stn_".concat(t);else if(e.startsWith("misc_node_"))n[e]="misc_node_".concat(t);else throw Error("Unrecognized node id: ".concat(e))}),Object.keys(b).filter(e=>r.hasEdge(e)).forEach(e=>n[e]="line_".concat(O(10)));const i=Object.entries(n).reduce((e,[t,a])=>e.replaceAll(t,a),s),{nodesWithAttrs:h,edgesWithAttrs:N,avgX:p,avgY:y}=JSON.parse(i),m=o?Object.fromEntries(Object.entries(h).filter(([e,t])=>t.type!==j.Master)):h,f=o?Object.fromEntries(Object.entries(N).filter(([e,{source:t,target:a}])=>t in m&&a in m)):N;if(u)for(const e in f)f[e].attr.parallelIndex>=0&&(f[e].attr.parallelIndex=-1);const[A,v]=[l-p,E-y];return Object.entries(m).forEach(([e,t])=>{t.x+=A,t.y+=v,r.addNode(e,t)}),Object.entries(f).forEach(([e,{attr:t,source:a,target:_}])=>r.addDirectedEdgeWithKey(e,a,_,t)),{nodes:new Set(Object.keys(m)),edges:new Set(Object.keys(f))}};export{k as e,R as i,x as u};
